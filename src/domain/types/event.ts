import { EventType } from '@/domain/enums/event-type';
import { EventRegistration } from './event-registration';
import { PaymentMethodCash } from './payment-method-cash';
import { PaymentMethodPayPal } from './payment-method-paypal';
import { PaymentMethodSepa } from './payment-method-sepa';
import { PaymentMethodStripe } from './payment-method-stripe';
import { EventState } from '@/domain/enums/event-state';
import { EventMaintainer } from './event-maintainer';
import { Accommodation } from './accommodation';
import { Offering } from './offering';
import { CurrencyCode } from '@/domain/enums/currency-code';

export type Event = {
  id?: string;
  name: string;
  alias: string;
  admin?: string;
  maintainers: EventMaintainer[];
  dateFrom: string;
  dateTo: string;
  registrationOpen: string;
  registrationDeadline: string;
  participationFee: number;
  participationFeeIncPaymentCosts: number;
  visitorFee: number;
  visitorFeeIncPaymentCosts: number;
  currency: CurrencyCode;
  description: string;
  venueName: string;
  venueHouseNo: string;
  venueStreet: string;
  venueCity: string;
  venuePostCode: string;
  venueCountry: string;
  type: EventType;
  trailerUrl: string;
  livestreamUrl: string;
  messangerInvitationUrl: string;
  paymentMethodCash: PaymentMethodCash;
  paymentMethodPayPal: PaymentMethodPayPal;
  paymentMethodSepa: PaymentMethodSepa;
  paymentMethodStripe: PaymentMethodStripe;
  showUserCountryFlag: boolean;
  autoApproveRegistrations: boolean;
  notifyOnRegistration: boolean;
  allowComments: boolean;
  notifyOnComment: boolean;
  waiver: string;
  visaInvitationRequestsEnabled: boolean;
  eventRegistrations: EventRegistration[];
  accommodations: Accommodation[];
  offerings: Offering[];
  state: EventState;
  imageUrlPoster: string;
};
